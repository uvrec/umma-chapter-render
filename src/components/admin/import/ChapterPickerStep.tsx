import { useState } from 'react';
import { Button } from '@/components/ui/button';
import { Card } from '@/components/ui/card';
import { ParsedChapter } from '@/types/book-import';
import { BookOpen, FileText } from 'lucide-react';

interface ChapterPickerStepProps {
  chapters: ParsedChapter[];
  onNext: (chapter: ParsedChapter) => void;
  onBack: () => void;
}

export function ChapterPickerStep({ chapters, onNext, onBack }: ChapterPickerStepProps) {
  const [selectedChapter, setSelectedChapter] = useState<ParsedChapter | null>(null);

  // Sort all chapters by chapter number (include both verse and text chapters)
  const validChapters = chapters.sort((a, b) => a.chapter_number - b.chapter_number);

  console.log(`üìã ChapterPicker: Displaying ${validChapters.length} chapters (${chapters.filter(c => c.chapter_type === 'verses').length} with verses, ${chapters.filter(c => c.chapter_type === 'text').length} text-only)`);

  if (validChapters.length === 0) {
    return (
      <div className="space-y-6">
        <div>
          <h2 className="text-xl font-bold mb-2">–ö—Ä–æ–∫ 3: –í–∏–±—ñ—Ä –≥–ª–∞–≤–∏ –¥–ª—è —ñ–º–ø–æ—Ä—Ç—É</h2>
          <p className="text-destructive">
            ‚ùå –ù–µ –∑–Ω–∞–π–¥–µ–Ω–æ –∂–æ–¥–Ω–æ—ó –≥–ª–∞–≤–∏ –∑ –≤—ñ—Ä—à–∞–º–∏. –ü–µ—Ä–µ–≤—ñ—Ä—Ç–µ —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª—É –∞–±–æ –Ω–∞–ª–∞—à—Ç—É–≤–∞–Ω–Ω—è —à–∞–±–ª–æ–Ω—É.
          </p>
        </div>
        <Button variant="outline" onClick={onBack}>
          –ù–∞–∑–∞–¥
        </Button>
      </div>
    );
  }

  return (
    <div className="space-y-6">
      <div>
        <h2 className="text-xl font-bold mb-2">–ö—Ä–æ–∫ 3: –í–∏–±—ñ—Ä –≥–ª–∞–≤–∏ –¥–ª—è —ñ–º–ø–æ—Ä—Ç—É</h2>
        <p className="text-muted-foreground">
          –ó–Ω–∞–π–¥–µ–Ω–æ {validChapters.length} –≥–ª–∞–≤ ({validChapters.filter(c => c.chapter_type === 'verses').length} –∑ –≤—ñ—Ä—à–∞–º–∏, {validChapters.filter(c => c.chapter_type === 'text').length} —Ç–µ–∫—Å—Ç–æ–≤–∏—Ö). –û–±–µ—Ä—ñ—Ç—å –æ–¥–Ω—É –≥–ª–∞–≤—É –¥–ª—è —ñ–º–ø–æ—Ä—Ç—É.
        </p>
      </div>

      <div className="grid gap-3 max-h-[500px] overflow-y-auto">
        {validChapters.map((chapter) => (
          <Card
            key={chapter.chapter_number}
            className={`p-4 cursor-pointer transition-colors ${
              selectedChapter?.chapter_number === chapter.chapter_number
                ? 'border-primary bg-primary/5'
                : ''
            }`}
            onClick={() => setSelectedChapter(chapter)}
          >
            <div className="flex items-center justify-between">
              <div className="flex items-center gap-3">
                {chapter.chapter_type === 'text' ? (
                  <FileText className="w-5 h-5 text-blue-500" />
                ) : (
                  <BookOpen className="w-5 h-5 text-primary" />
                )}
                <div>
                  <p className="text-sm text-muted-foreground mb-1">
                    –ì–ª–∞–≤–∞ {chapter.chapter_number}
                    {chapter.chapter_type === 'text' && ' (—Ç–µ–∫—Å—Ç–æ–≤–∞)'}
                  </p>
                  <h3 className="font-semibold">{chapter.title_ua}</h3>
                  <p className="text-sm text-muted-foreground">
                    {chapter.chapter_type === 'verses' 
                      ? `${chapter.verses.length} –≤—ñ—Ä—à—ñ–≤`
                      : `–¢–µ–∫—Å—Ç–æ–≤–∞ –≥–ª–∞–≤–∞ (${chapter.content_ua?.length || 0} —Å–∏–º–≤–æ–ª—ñ–≤)`
                    }
                  </p>
                </div>
              </div>
              {selectedChapter?.chapter_number === chapter.chapter_number && (
                <div className="text-primary font-semibold">–û–±—Ä–∞–Ω–æ</div>
              )}
            </div>
          </Card>
        ))}
      </div>

      <div className="flex justify-between">
        <Button variant="outline" onClick={onBack}>
          –ù–∞–∑–∞–¥
        </Button>
        <Button onClick={() => selectedChapter && onNext(selectedChapter)} disabled={!selectedChapter}>
          –î–∞–ª—ñ: –ü–æ–ø–µ—Ä–µ–¥–Ω—ñ–π –ø–µ—Ä–µ–≥–ª—è–¥
        </Button>
      </div>
    </div>
  );
}
